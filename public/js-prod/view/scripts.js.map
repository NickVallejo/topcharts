{"version":3,"sources":["mobile-tiles-prof.js","tileListeners-prof.js","view2.js"],"names":["touch","touchMoved","isScrolling","touchMove","console","log","clearTimeout","setTimeout","touchStart","e","undefined","target","childNodes","all_top","document","querySelectorAll","fromBox","getAttribute","inspected","querySelector","classList","remove","style","display","i","opacity","pointerEvents","removeEventListener","tileSettings","add","addEventListener","async","switchTo","closest","contains","forEach","top","toBox","window","viewChart","ytAlbum","ytSearch","XMLHttpRequest","parentNode","open","artist","album_name","onload","ytExit","ytVid","url","responseText","replace","ytWrap","innerHTML","slidUpMenu","send","this","addtileListeners","body","pathArray","location","pathname","split","topWrapper","chartNamesWrapper","frontEndTitle","user","chart","getViewData","req","setRequestHeader","view","JSON","parse","showViewData","chartNoScores","title","length","insertAdjacentHTML","album_image"],"mappings":"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","file":"scripts.js","sourcesContent":["let touch, touchMoved, isScrolling\r\n\r\nfunction touchMove() {\r\n  console.log(\"scrolling\")\r\n  touchMoved = true\r\n\r\n  clearTimeout(isScrolling)\r\n\r\n  isScrolling = setTimeout(() => {\r\n    console.log(\"scrolling has stopped\")\r\n    // addtileListeners();\r\n    touchMoved = false\r\n  }, 100)\r\n}\r\n\r\nfunction touchStart(e) {\r\n  if (touchMoved != true && e.target.childNodes[1] != undefined) {\r\n    console.log(\"switch from\")\r\n    const all_top = document.querySelectorAll(\".top\")\r\n    let fromBox = e.target\r\n    const fromIndex = e.target.getAttribute(\"rank\")\r\n    const inspected = document.querySelector(\".tile-inspect\")\r\n\r\n    if (inspected) {\r\n      inspected.classList.remove(\"tile-inspect\")\r\n      inspected.childNodes[1].style.display = \"none\"\r\n      for (i = 1; i < 4; i++) {\r\n        inspected.childNodes[i].style.opacity = \"0\"\r\n        inspected.childNodes[i].style.pointerEvents = \"none\"\r\n      }\r\n      inspected.removeEventListener(\"touchend\", tileSettings)\r\n    }\r\n\r\n    if (fromBox.childNodes[1] != undefined) {\r\n      fromBox.classList.add(\"tile-inspect\")\r\n      fromBox.childNodes[1].style.display = \"block\"\r\n      for (i = 1; i < 4; i++) {\r\n        fromBox.childNodes[i].style.opacity = \"1\"\r\n        fromBox.childNodes[i].style.pointerEvents = \"all\"\r\n      }\r\n      fromBox.addEventListener(\"touchend\", tileSettings)\r\n    }\r\n\r\n    all_top.forEach((top) => {\r\n      top.removeEventListener(\"touchend\", touchStart)\r\n    })\r\n\r\n    setTimeout(() => {\r\n      document.addEventListener(\"touchend\", switchTo)\r\n    }, 0.0001)\r\n\r\n    async function switchTo(e) {\r\n      console.log(\"switch to\")\r\n\r\n      if (\r\n        e.target.closest(\".top\") == null ||\r\n        (touchMoved == true && e.target.classList.contains(\"tile-hover\")) ||\r\n        e.target.classList.contains(\"tile-hover\")\r\n      ) {\r\n        console.log(\"inside first condditional\")\r\n        all_top.forEach((top) => {\r\n          top.addEventListener(\"touchend\", touchStart)\r\n        })\r\n\r\n        document.removeEventListener(\"touchend\", switchTo)\r\n\r\n        if (fromBox.childNodes[1] != undefined) {\r\n          fromBox.classList.remove(\"tile-inspect\")\r\n          fromBox.childNodes[1].style.display = \"none\"\r\n          for (i = 1; i < 4; i++) {\r\n            fromBox.childNodes[i].style.opacity = \"0\"\r\n            fromBox.childNodes[i].style.pointerEvents = \"none\"\r\n          }\r\n          fromBox.removeEventListener(\"touchend\", tileSettings)\r\n        }\r\n\r\n        return\r\n      } else if (\r\n        touchMoved != true &&\r\n        !e.target.classList.contains(\"frontPlay\") &&\r\n        !e.target.classList.contains(\"frontRank\") &&\r\n        !e.target.classList.contains(\"tile-title\")\r\n      ) {\r\n\r\n        const toBox = e.target\r\n        const toIndex = e.target.getAttribute(\"rank\")\r\n        const theBox = toBox.childNodes[1] == undefined ? toBox : fromBox\r\n\r\n        if (fromBox.childNodes[1] != undefined) {\r\n          fromBox.classList.remove(\"tile-inspect\")\r\n          fromBox.childNodes[1].style.display = \"none\"\r\n          for (i = 1; i < 4; i++) {\r\n            fromBox.childNodes[i].style.opacity = \"0\"\r\n            fromBox.childNodes[i].style.pointerEvents = \"none\"\r\n          }\r\n          fromBox.removeEventListener(\"touchend\", tileSettings)\r\n        }\r\n\r\n        if (toBox.childNodes[1] != undefined) {\r\n          toBox.classList.add(\"tile-inspect\")\r\n          toBox.childNodes[1].style.display = \"block\"\r\n          for (i = 1; i < 4; i++) {\r\n            toBox.childNodes[i].style.opacity = \"1\"\r\n            toBox.childNodes[i].style.pointerEvents = \"all\"\r\n          }\r\n          toBox.addEventListener(\"touchend\", tileSettings)\r\n        }\r\n\r\n        all_top.forEach((top) => {\r\n          top.addEventListener(\"touchend\", touchStart)\r\n        })\r\n\r\n        document.removeEventListener(\"touchend\", switchTo)\r\n      }\r\n\r\n      function tileSettings(e) {\r\n        console.log(window.viewChart, \"YA\")\r\n\r\n        if (e.target.classList.contains(\"frontPlay\")) {\r\n          let ytSearch = new XMLHttpRequest()\r\n          let ytAlbum\r\n\r\n          ytAlbum = window.viewChart[e.target.parentNode.getAttribute(\"rank\")]\r\n          console.log(ytAlbum)\r\n\r\n          ytSearch.open(\r\n            \"GET\",\r\n            `/yt-listen?artist=${ytAlbum.artist}&album=${ytAlbum.album_name}`\r\n          )\r\n          ytSearch.onload = () => {\r\n            let ytExit\r\n            let ytVid\r\n\r\n            const url = ytSearch.responseText.replace(\"watch?v=\", \"embed/\")\r\n            ytWrap.innerHTML = `<div class=\"yt-vid\"><p class=\"yt-exit\">X</p><iframe width=\"560\" height=\"315\" src=${url}?rel=0&controls=1&autoplay=1&mute=0 allow=\"autoplay\" frameborder=\"0\" allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>`\r\n            ytExit = document.querySelector(\".yt-exit\")\r\n            ytVid = document.querySelector(\".yt-vid\")\r\n\r\n            const slidUpMenu = document.querySelector(\".set-slide-up\")\r\n            if (slidUpMenu) {\r\n              slidUpMenu.classList.remove(\"set-slide-up\")\r\n            }\r\n\r\n            console.log(\"PANG PANG PANG\")\r\n\r\n            ytExit.addEventListener(\"click\", () => {\r\n              ytVid.remove()\r\n            })\r\n          }\r\n          ytSearch.send()\r\n        } else if (e.target.classList.contains(\"tile-hover\")) {\r\n          console.log(\"tile HOVER DETEDCTED\")\r\n          this.childNodes[1].style.display = \"none\"\r\n          this.classList.remove(\"tile-inspect\")\r\n          for (i = 1; i < 4; i++) {\r\n            this.childNodes[i].style.opacity = \"0\"\r\n            this.childNodes[i].style.pointerEvents = \"none\"\r\n          }\r\n\r\n          e.target.removeEventListener(\"touchend\", tileSettings)\r\n          setTimeout(() => {\r\n            addtileListeners()\r\n          }, 100)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n//close the settings for the longpressed tile if you're not touching the tile\r\n","function addtileListeners(){\r\n      //redefines all the top tiles\r\n      const all_top = document.querySelectorAll(\".top\")\r\n  \r\n      if('ontouchstart' in document.body){\r\n        all_top.forEach((top) => {\r\n          top.addEventListener(\"touchend\", touchStart)\r\n          top.addEventListener('touchmove', touchMove)\r\n          top.removeEventListener(\"click\", tileSettings)      \r\n        })\r\n      } else{\r\n      all_top.forEach((top) => {\r\n        top.removeEventListener(\"touchend\", touchStart)\r\n        top.removeEventListener('touchmove', touchMove)\r\n        top.addEventListener(\"click\", tileSettings)      \r\n      })\r\n    }\r\n  }","const pathArray = window.location.pathname.split(\"/\")\r\nconst topWrapper = document.querySelector(\".top_wrapper\")\r\nconst chartNamesWrapper = document.querySelector(\".chart_names\")\r\nconst frontEndTitle = document.querySelector(\".chart_title\")\r\nconst ytWrap = document.querySelector(\".yt-wrap\")\r\n\r\nconst user = pathArray[1]\r\nconst chart = pathArray[3]\r\n\r\nfunction tileSettings(e) {\r\n  console.log(window.viewChart, \"YA\")\r\n\r\n  if (e.target.classList.contains(\"frontPlay\")) {\r\n    let ytSearch = new XMLHttpRequest()\r\n    let ytAlbum\r\n\r\n    ytAlbum = window.viewChart[e.target.parentNode.getAttribute(\"rank\")]\r\n    console.log(ytAlbum)\r\n\r\n    ytSearch.open(\"GET\", `/yt-listen?artist=${ytAlbum.artist}&album=${ytAlbum.album_name}`)\r\n    ytSearch.onload = () => {\r\n      let ytExit\r\n      let ytVid\r\n\r\n      const url = ytSearch.responseText.replace(\"watch?v=\", \"embed/\")\r\n      ytWrap.innerHTML = `<div class=\"yt-vid\"><p class=\"yt-exit\">X</p><iframe width=\"560\" height=\"315\" src=${url}?rel=0&controls=1&autoplay=1&mute=0 allow=\"autoplay\" frameborder=\"0\" allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>`\r\n      ytExit = document.querySelector(\".yt-exit\")\r\n      ytVid = document.querySelector(\".yt-vid\")\r\n\r\n      const slidUpMenu = document.querySelector(\".set-slide-up\")\r\n      if (slidUpMenu) {\r\n        slidUpMenu.classList.remove(\"set-slide-up\")\r\n      }\r\n\r\n      console.log(\"PANG PANG PANG\")\r\n\r\n      ytExit.addEventListener(\"click\", () => {\r\n        ytVid.remove()\r\n      })\r\n    }\r\n    ytSearch.send()\r\n  }\r\n}\r\n\r\n// function addtileListeners(){\r\n//     const all_top = document.querySelectorAll(\".top\")\r\n//     all_top.forEach((top) => {\r\n//       top.addEventListener(\"click\", tileSettings)\r\n//     })\r\n//     console.log('listeners added', all_top)\r\n//   }\r\n\r\nconst getViewData = async () => {\r\n  const req = new XMLHttpRequest()\r\n  req.open(\"GET\", `/profile/onechart?username=${user}&chartname=${chart}`)\r\n  req.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\")\r\n  req.onload = () => {\r\n    const view = JSON.parse(req.responseText)\r\n    showViewData(view.user, view.chart)\r\n    window.viewChart = view.chart.chart\r\n  }\r\n\r\n  req.send()\r\n}\r\n\r\nconst showViewData = (user, chart) => {\r\n  const viewChart = chart.chart\r\n  const chartNoScores = chart.title.replace(/_/g, \" \")\r\n\r\n  //check if the name attr of the clicked save matches one in the saved array, then add it to a new array\r\n\r\n  frontEndTitle.innerHTML = `<h3 class=\"view-title-info\"><span><a class=\"view-username\" href=\"/${user}\">${user}:</a> ${chartNoScores}</span></h3>`\r\n\r\n  //Erase all current tiles and replace with selected list\r\n  topWrapper.innerHTML = \"\"\r\n  for (i = 0; i < viewChart.length; i++) {\r\n    if (viewChart[i] !== undefined && viewChart[i] !== null) {\r\n      topWrapper.insertAdjacentHTML(\r\n        \"beforeend\",\r\n        `<div style=\"background-image: url(${viewChart[i].album_image\r\n        })\" class=\"top ${i}\" rank=${i} active=\"no\"><p class=\"frontRank\">${i + 1\r\n        }</p><div class=\"tile-hover\" rank=${i}></div><i class=\"fas fa-play-circle frontPlay\"></i><p class=\"tile-title\">${viewChart[i].artist\r\n        } - ${viewChart[i].album_name}</p></div>`\r\n      )\r\n    } else {\r\n      topWrapper.insertAdjacentHTML(\r\n        \"beforeend\",\r\n        `<div style=\"background-image: url()\" class=\"top ${i}\" rank=${i} active=\"no\"><p class=\"frontRank\">${i + 1\r\n        }</p></div>`\r\n      )\r\n    }\r\n  }\r\n\r\n  //erase all current chart artist names and replace with selected list\r\n  chartNamesWrapper.innerHTML = \"\"\r\n  for (i = 0; i < viewChart.length; i++) {\r\n    if (viewChart[i] !== null && viewChart[i] !== undefined) {\r\n      chartNamesWrapper.insertAdjacentHTML(\r\n        \"beforeend\",\r\n        `<p class=\"albumInfo\" rank=${i}><span class=\"chartNameNum\">${i + 1}. </span>${viewChart[i].artist} - ${viewChart[i].album_name\r\n        }</p>`\r\n      )\r\n    } else {\r\n      chartNamesWrapper.insertAdjacentHTML(\r\n        \"beforeend\",\r\n        `<p class=\"albumInfo\" rank=${i}><span class=\"chartNameNum\">${i + 1}. </span></p>`\r\n      )\r\n    }\r\n  }\r\n\r\n  //add new listeners depending on if the chart selected increased or decreased in tile size\r\n  addtileListeners()\r\n}\r\n\r\ngetViewData()\r\n"]}